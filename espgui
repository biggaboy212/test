-- Library Dependencies
local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/VisualRoblox/Roblox/main/UI-Libraries/Visual%20UI%20Library/Source.lua'))()

local KarpiVisuals = Library:CreateWindow('Karpi Visuals', 'Universal', 'Karpi Visuals 1.0', 'rbxassetid://10618928818', false, 'Karpi_Visuals_Config', 'Default')

local VisualsTab = KarpiVisuals:CreateTab('Visuals', true, 'rbxassetid://3926305904', Vector2.new(524, 44), Vector2.new(36, 36))

local VisualsSection = VisualsTab:CreateSection('Visuals')

-- Variables
local plr1 = game.Players.LocalPlayer
local others = game:GetService("Players")
local espog = false
local lines = false
local nametags = true
local boxes = true

-- ESP Toggle
local ESPToggle = VisualsSection:CreateToggle('ESP', true, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
     -- initially created by 'mickeyrbx', revamped by me
     if Value == false then
        Value = true
        if espog == false then
                -- services
 local runService = game:GetService("RunService");
 
 -- variables
 local camera = workspace.CurrentCamera;
 
 -- functions
 local newVector2, draw = Vector2.new, Drawing.new;
 local tan, rad = math.tan, math.rad;
 local round = function(...) local a = {}; for i,v in next, table.pack(...) do a[i] = math.round(v); end return unpack(a); end;
 local wtvp = function(...) local a, b = camera.WorldToViewportPoint(camera, ...) return newVector2(a.X, a.Y), b, a.Z end;

 local espCache = {};
 local function createEsp(player)
    local drawings = {};
    
    drawings.box = draw("Square");
    drawings.box.Thickness = 2;
    drawings.box.Filled = false;
    drawings.box.Color = Color3.fromRGB(0,255,0);
    drawings.box.Visible = false;
    drawings.box.ZIndex = 2;

    drawings.line = draw("Line")
    drawings.line.Visible = false;
    drawings.line.From = Vector2.new(0, 0);
    drawings.line.To = Vector2.new(1, 1);
    drawings.line.Color = Color3.fromRGB(0,255,0);
    drawings.line.Thickness = 1;
    drawings.line.ZIndex = 2;

    drawings.gui = Instance.new("BillboardGui")
    drawings.gui.ResetOnSpawn = false
    drawings.gui.AlwaysOnTop = true;
    drawings.gui.LightInfluence = 0;
    drawings.gui.Size = UDim2.new(1.75, 0, 1.75, 0);

    drawings.esp = Instance.new("TextLabel",drawings.gui)
    drawings.esp.BackgroundTransparency = 1
    drawings.esp.Text = ""
    drawings.esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
    drawings.esp.Font = "GothamSemibold"
    drawings.esp.TextSize = 8
    drawings.esp.TextColor3 = Color3.fromRGB(0,255,0) 
 
    espCache[player] = drawings;
 end
 
 local function removeEsp(player)
    if rawget(espCache, player) then
        for _, drawing in next, espCache[player] do
            drawing:Remove();
        end
        espCache[player] = nil;
    end
 end
 
 local function updateEsp(player, esp)
    local character = player and player.Character;
    if character then
        local cframe = character:GetModelCFrame();
        local position, visible, depth = wtvp(cframe.Position);
            esp.box.Visible = visible;
            esp.line.Visible = visible;
 
        if cframe and visible then
            -- Boxes
            if boxes and visible then
                esp.box.Visible = true;
            local scaleFactor = 1 / (depth * tan(rad(camera.FieldOfView / 2)) * 2) * 1000;
            local width, height = round(4 * scaleFactor, 5 * scaleFactor);
            local x, y = round(position.X, position.Y);
                esp.box.Size = newVector2(width, height);
                esp.box.Position = newVector2(round(x - width / 2, y - height / 2));
                esp.box.Color = Color3.new(1, 0, 0):Lerp(Color3.new(0, 1, 0), character.Humanoid.Health / character.Humanoid.MaxHealth);
            elseif not boxes then
                esp.box.Visible = false;
            end

            -- Tracers (Copied over from one of my other scripts so some variables from above aren't used)
            if lines and visible then
                esp.line.Visible = true;
                esp.line.From = newVector2(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                esp.line.To = newVector2(position.X, position.Y)
                esp.line.Color = Color3.new(1, 0, 0):Lerp(Color3.new(0, 1, 0), character.Humanoid.Health / character.Humanoid.MaxHealth)
            elseif not lines then
                esp.line.Visible = false;
            end

            -- Nametags
            if nametags and visible then
                esp.esp.Visible = true;
                esp.esp.Text = player.Name.." | Health: "..math.round(character:WaitForChild("Humanoid").Health)
                esp.gui.Parent = character.Head
                esp.esp.TextColor3 = Color3.new(1, 0, 0):Lerp(Color3.new(0, 1, 0), character.Humanoid.Health / character.Humanoid.MaxHealth)
            elseif not nametags then
                esp.esp.Visible = false;
            end
        end
    else
        esp.box.Visible = false;
        esp.line.Visible = false;
        esp.esp.Visible = false;
    end
 end
    
    -- main
    for _, player in next, others:GetPlayers() do
        if player ~= plr1 then
            createEsp(player);
        end
     end
     
     others.PlayerAdded:Connect(function(player)
        createEsp(player);
     end);
     
     others.PlayerRemoving:Connect(function(player)
        removeEsp(player);
     end)
   
    
    runService:BindToRenderStep("esp", Enum.RenderPriority.Camera.Value, function()
        if Value == true then
       for player, drawings in next, espCache do
           if drawings then
               updateEsp(player, drawings);
           end
       end
    else 
        for _, player in next, others:GetPlayers() do
            if player ~= plr1 then
                removeEsp(player)
            end
         end
    end
    end)
        end
    elseif Value == true then
        Value = false
    end
end)

-- OptionsLable
local OptionsLabel = VisualsSection:CreateLabel('Options')

-- Toggle Boxes
local BoxesToggle = VisualsSection:CreateToggle('Boxes', true, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == false then boxes = true elseif Value == true then boxes = false end
end)

-- Toggle Tracers
local TracersToggle = VisualsSection:CreateToggle('Tracers', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == false then lines = true elseif Value == true then lines = false end
end)

-- Toggle Nametags
local NametagsToggle = VisualsSection:CreateToggle('Nametags', true, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == false then nametags = true elseif Value == true then nametags = false end
end)
