local version = "4.199"
local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/VisualRoblox/Roblox/main/UI-Libraries/Visual%20Command%20UI%20Library/Source.lua', true))()

local Window = Library:CreateWindow({
    Name = 'KarpiWare V4',
    IntroText = 'Proton Utilities | KarpiWare V'..version,
    IntroIcon = 'rbxassetid://0',
    IntroBlur = true,
    IntroBlurIntensity = 15,
    Theme =  Library.Themes.redandblack,
    Position = 'Bottom',
    Draggable = true,
    Prefix = _G.Prefix
})

-- variables
local HttpService = game:GetService("HttpService");
local file = "karpi_ware_settings.txt";
local savedtheme = nil
local plr1 = game.Players.LocalPlayer
local others = game:GetService("Players")
local espog = false
local esp = false
local lines = false
local nametags = true
local boxes = true


-- functions
function load()
	print("loading sets")
	if (readfile and isfile and isfile(file)) then
        print('file found, loading settings')
		savedtheme = HttpService:JSONDecode(readfile(file));
		Window:ChangeTheme(savedtheme)
        Window:CreateNotification('KarpiWare', 'Loaded saved theme')
	end
end

function save(tosave)
    print("saving sets")
    local json;
    if (writefile) then
    json = HttpService:JSONEncode(tosave)
    writefile(file, json);
    print("saved sets")
    else
        print("writefile function dosen't exist on this executor")
    end
end


load()


Window:AddCommand('ChangeTheme', {'Theme'}, 'Dark, Light, Red, Orange, Purple, Blue', function(Arguments, Speaker)
    if Arguments[1] == "Dark" then
        Window:ChangeTheme('dark')
        save('dark')
    elseif Arguments[1] == "dark" then
        Window:ChangeTheme('dark')
        save('dark')
    elseif Arguments[1] == "Light" then
        Window:ChangeTheme('light')
        save('light')
    elseif Arguments[1] == "Red" then
        Window:ChangeTheme('redandblack')
        save('redandblack')
    elseif Arguments[1] == "Orange" then
        Window:ChangeTheme('kiriot')
        save('kiriot')
    elseif Arguments[1] == "Purple" then
        Window:ChangeTheme('purple')
        save('purple')
    elseif Arguments[1] == "Blue" then
        Window:ChangeTheme('scriptware')
        save('scriptware')
    elseif Arguments[1] == "light" then
        Window:ChangeTheme('light')
        save('light')
    elseif Arguments[1] == "red" then
        Window:ChangeTheme('redandblack')
        save('redandblack')
    elseif Arguments[1] == "orange" then
        Window:ChangeTheme('kiriot')
        save('kiriot')
    elseif Arguments[1] == "purple" then
        Window:ChangeTheme('purple')
        save('purple')
    elseif Arguments[1] == "blue" then
        Window:ChangeTheme('scriptware')
        save('scriptware')
    end
end)


Window:AddCommand('Discord', {}, 'Copies discord link', function(Arguments, Speaker)
    setclipboard("https://discord.gg/sbZNGNVdE9")
    Window:CreateNotification('KarpiWare', 'Copied Discord link')
end)

Window:AddCommand('ESP', {}, 'Revamped ESP (Load again to disable)', function(Arguments, Speaker)
    -- initially created by 'mickeyrbx', revamped by me
    if esp == false then
        esp = true
        if espog == false then
                -- services
 local runService = game:GetService("RunService");
 
 -- variables
 local camera = workspace.CurrentCamera;
 local lasttarg = nil
 
 -- functions
 local newVector2, newColor3, draw = Vector2.new, Color3.new, Drawing.new;
 local tan, rad = math.tan, math.rad;
 local round = function(...) local a = {}; for i,v in next, table.pack(...) do a[i] = math.round(v); end return unpack(a); end;
 local wtvp = function(...) local a, b = camera.WorldToViewportPoint(camera, ...) return newVector2(a.X, a.Y), b, a.Z end;
 local wtvptrcrs = camera.WorldToViewportPoint

 local espCache = {};
 local function createEsp(player)
    local drawings = {};
    
    drawings.box = draw("Square");
    drawings.box.Thickness = 2;
    drawings.box.Filled = false;
    drawings.box.Color = Color3.fromRGB(0,255,0);
    drawings.box.Visible = false;
    drawings.box.ZIndex = 2;

    drawings.line = draw("Line")
    drawings.line.Visible = false;
    drawings.line.From = Vector2.new(0, 0);
    drawings.line.To = Vector2.new(1, 1);
    drawings.line.Color = Color3.fromRGB(0,255,0);
    drawings.line.Thickness = 1;
    drawings.line.ZIndex = 2;

    drawings.gui = Instance.new("BillboardGui")
    drawings.gui.ResetOnSpawn = false
    drawings.gui.AlwaysOnTop = true;
    drawings.gui.LightInfluence = 0;
    drawings.gui.Size = UDim2.new(1.75, 0, 1.75, 0);

    drawings.esp = Instance.new("TextLabel",drawings.gui)
    drawings.esp.BackgroundTransparency = 1
    drawings.esp.Text = ""
    drawings.esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
    drawings.esp.Font = "GothamSemibold"
    drawings.esp.TextSize = 8
    drawings.esp.TextColor3 = Color3.fromRGB(0,255,0) 
 
    espCache[player] = drawings;
 end
 
 local function removeEsp(player)
    if rawget(espCache, player) then
        for _, drawing in next, espCache[player] do
            drawing:Remove();
        end
        espCache[player] = nil;
    end
 end
 
 local function updateEsp(player, esp)
    local character = player and player.Character;
    if character then
        local cframe = character:GetModelCFrame();
        local position, visible, depth = wtvp(cframe.Position);
            esp.box.Visible = visible;
            esp.line.Visible = visible;
 
        if cframe and visible then
            -- Boxes
            if boxes and visible then
                esp.box.Visible = true;
            local scaleFactor = 1 / (depth * tan(rad(camera.FieldOfView / 2)) * 2) * 1000;
            local width, height = round(4 * scaleFactor, 5 * scaleFactor);
            local x, y = round(position.X, position.Y);
                esp.box.Size = newVector2(width, height);
                esp.box.Position = newVector2(round(x - width / 2, y - height / 2));
                esp.box.Color = Color3.new(1, 0, 0):Lerp(Color3.new(0, 1, 0), character.Humanoid.Health / character.Humanoid.MaxHealth);
            elseif not boxes then
                esp.box.Visible = false;
            end

            -- Tracers (Copied over from one of my other scripts so some variables from above aren't used)
            if lines and visible then
                esp.line.Visible = true;
                esp.line.From = newVector2(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                esp.line.To = newVector2(position.X, position.Y)
                esp.line.Color = Color3.new(1, 0, 0):Lerp(Color3.new(0, 1, 0), character.Humanoid.Health / character.Humanoid.MaxHealth)
            elseif not lines then
                esp.line.Visible = false;
            end

            -- Nametags
            if nametags and visible then
                esp.gui.Active = false;
                esp.esp.Text = player.Name.." | Health: "..math.round(character:WaitForChild("Humanoid").Health)
                esp.gui.Parent = character.Head
                esp.esp.TextColor3 = Color3.new(1, 0, 0):Lerp(Color3.new(0, 1, 0), character.Humanoid.Health / character.Humanoid.MaxHealth)
            elseif not nametags then
                esp.gui.Active = false;
            end
        end
    else
        esp.box.Visible = false;
        esp.line.Visible = false;
        esp.gui.Active = false;
    end
 end
    
    -- main
    for _, player in next, others:GetPlayers() do
        if player ~= plr1 then
            createEsp(player);
        end
     end
     
     others.PlayerAdded:Connect(function(player)
        createEsp(player);
     end);
     
     others.PlayerRemoving:Connect(function(player)
        removeEsp(player);
     end)
   
    
    runService:BindToRenderStep("esp", Enum.RenderPriority.Camera.Value, function()
        if esp == true then
       for player, drawings in next, espCache do
           if drawings then
               updateEsp(player, drawings);
           end
       end
    else 
        for _, player in next, others:GetPlayers() do
            if player ~= plr1 then
                removeEsp(player)
            end
         end
    end
    end)
        end
    elseif esp == true then
        esp = false
    end
 end)

 Window:AddCommand('Tracers', {}, 'Enables/Disables Tracer ESP (Must have ESP Enabled)', function(Arguments, Speaker)
    if lines == false then lines = true elseif lines == true then lines = false end
 end)


 Window:AddCommand('Boxes', {}, 'Enables/Disables Tracer ESP (Must have ESP Enabled)', function(Arguments, Speaker)
    if boxes == false then boxes = true elseif boxes == true then boxes = false end
 end)
 

 Window:AddCommand('Names', {}, 'Enables/Disables Tracer ESP (Must have ESP Enabled)', function(Arguments, Speaker)
    if nametags == false then nametags = true elseif nametags == true then nametags = false end
 end)
